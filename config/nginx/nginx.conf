upstream php-handler {
    server app:9000;
}

server {

    listen       80;
    listen       [::]:80;

    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 30s;
    
    server_name ${PNAME}.localhost;

    error_log /var/log/error.log debug;

    access_log off;
    root /var/www/html;
    index index.php index.html;

    server_tokens off;
    autoindex off;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    if (!-e $request_filename)
    {
        rewrite ^/(.+)$ /index.php?q=$1 last;
    }

    location = / {
        if ( $http_user_agent ~ ^DavClnt ) {
            return 302 /remote.php/webdav/is_$args$args;
        }
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location /remote {
        return 301 /remote.php$request_uri;
    }

    location ~ /\.ht {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ^~ /.well-known {
        # The rules in this block are an adaptation of the rules
        # in `.htaccess` that concern `/.well-known`.

        location = /.well-known/carddav { return 301 /remote.php/dav/; }
        location = /.well-known/caldav  { return 301 /remote.php/dav/; }

        location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
        location /.well-known/pki-validation    { try_files $uri $uri/ =404; }

        # Let Nextcloud's API for `/.well-known` URIs handle all other
        # requests by passing them to the front-end controller.
        return 301 /index.php$request_uri;
    }

    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }

    client_max_body_size 512M;
    fastcgi_buffers 64 4K;

    add_header Referrer-Policy                      "no-referrer"   always;
    add_header X-Content-Type-Options               "nosniff"       always;
    add_header X-Download-Options                   "noopen"        always;
    add_header X-Frame-Options                      "SAMEORIGIN"    always;
    add_header X-Permitted-Cross-Domain-Policies    "n$1"          always;
    add_header X-XSS-Protection                     "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000";

    # Remove X-Powered-By, which is an information leak

    location ~* \.(txt|xml|js)$ {
        expires 1y;
    }

    location ~* \.(css)$ {
        expires 1y;
    }

    location ~* \.(flv|ico|pdf|avi|mov|ppt|doc|mp3|wmv|wav|mp4|m4v|ogg|webm|aac|eot|ttf|otf|woff|woff2|svg)$ {
        expires 1y;
    }

    location ~* \.(jpg|jpeg|png|gif|swf|webp)$ {
        expires 1y;
    }

    # Enable Gzip compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 4;
    gzip_min_length 256;
    gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
    gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-comp$1nt text/x-cross-domain-policy;
        
    location ~ \.php(?:$|/) {
        fastcgi_hide_header X-Powered-By;
        proxy_hide_header X-Powered-By;

        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        set $path_info $fastcgi_path_info;

        try_files $fastcgi_script_name =404;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $path_info;
        fastcgi_param HTTPS on;

        fastcgi_param modHeadersAvailable true;         # Avoid sending the security headers twice
        fastcgi_param front_controller_active true;     # Enable pretty urls
        fastcgi_pass php-handler;

        fastcgi_intercept_errors on;
        fastcgi_request_buffering off;
    }

}
